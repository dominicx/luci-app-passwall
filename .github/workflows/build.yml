on:
  push:
#     Sequence of patterns matched against refs/tags
    tags:
    - '*' # Tag events

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: checkout codes
        uses: actions/checkout@v1
      - name: build
        id: build_ipk
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo ::set-output name=tag_name::${TAG}
          mkdir -p /tmp/luci-app-passwall/usr/lib/lua/luci /tmp/luci-app-passwall/www/
          [ -d $GITHUB_WORKSPACE/luasrc ] && cp -R $GITHUB_WORKSPACE/luasrc/* /tmp/luci-app-passwall/usr/lib/lua/luci/
          [ -d $GITHUB_WORKSPACE/root ] && cp -R $GITHUB_WORKSPACE/root/* /tmp/luci-app-passwall/
          [ -d $GITHUB_WORKSPACE/htdoc ] && cp -R $GITHUB_WORKSPACE/htdoc/* /tmp/luci-app-passwall/www/
          [ -d $GITHUB_WORKSPACE/po ] && sudo -E apt-get -y install gcc make && \
          mkdir -p /tmp/po2lmo && mkdir -p /tmp/luci-app-passwall/usr/lib/lua/luci/i18n/ && \
          wget -O /tmp/po2lmo/po2lmo.c https://raw.githubusercontent.com/openwrt/luci/openwrt-18.06/modules/luci-base/src/po2lmo.c && \
          wget -O /tmp/po2lmo/Makefile https://raw.githubusercontent.com/openwrt/luci/openwrt-18.06/modules/luci-base/src/Makefile && \
          wget -O /tmp/po2lmo/template_lmo.h https://raw.githubusercontent.com/openwrt/luci/openwrt-18.06/modules/luci-base/src/template_lmo.h && \
          wget -O /tmp/po2lmo/template_lmo.c https://raw.githubusercontent.com/openwrt/luci/openwrt-18.06/modules/luci-base/src/template_lmo.c && \
          cd /tmp/po2lmo && make po2lmo && \
          ./po2lmo $GITHUB_WORKSPACE/po/zh-cn/passwall.po /tmp/luci-app-passwall/usr/lib/lua/luci/i18n/passwall.zh-cn.lmo
          mkdir -p /tmp/luci-app-passwall/CONTROL
          cat >/tmp/luci-app-passwall/CONTROL/control <<EOF
          Package: luci-app-passwall
          Version: ${TAG}
          Depends: libc, libmbedtls, iptables-mod-tproxy, kmod-ipt-tproxy, iptables-mod-ipopt, kmod-ipt-ipopt, ip, ipset, coreutils, coreutils-base64, coreutils-nohup, luci-lib-jsonc, wget, resolveip, unzip, dnsmasq-full, tcping, ipt2socks, shadowsocksr-libev-alt, v2ray, haproxy, chinadns-ng, pdnsd-alt, dns2socks
          Architecture: all
          Maintainer: lisaac<lisaac.cn@gmail.com>
          Section: base
          Priority: optional
          Description:  LuCI support for PassWall
          Source: https://github.com/Lienol/openwrt-package/tree/master/lienol/luci-app-passwall
          EOF
          cat >/tmp/luci-app-passwall/CONTROL/postinst <<EOF
          #!/bin/sh
          rm -rf /tmp/luci-indexcache /tmp/luci-modulecache
          EOF
          chmod +x /tmp/luci-app-passwall/CONTROL/postinst
          wget -O /tmp/ipkg-build https://raw.githubusercontent.com/openwrt/openwrt/master/scripts/ipkg-build && \
          chmod +x /tmp/ipkg-build && \
          /tmp/ipkg-build -o root -g root /tmp/luci-app-passwall /tmp
      - name: Release to GitHub
        id: create_release
        uses: opspresso/action-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: "v0.2.2"
          DRAFT: "false"
          PRERELEASE: "false"
          PRERELEASE_NAME: Release ${{ github.ref }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.action-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /tmp/luci-app-passwall_${{ steps.build_ipk.outputs.tag_name }}_all.ipk
          asset_name: luci-app-passwall_${{ steps.build_ipk.outputs.tag_name }}_all.ipk
          asset_content_type: application/octet-stream
